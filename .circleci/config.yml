version: 2.1

jobs:
  run_client:
    resource_class: small
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run: pip install -r client/requirements.txt
      - run: python client/main.py

  check_client:
    resource_class: small
    docker:
      - image: cimg/python:3.9-node
    steps:
      - checkout
      - run: echo 'export SHORT_REV=$(echo $CIRCLE_SHA1 | cut -c -7)' >> $BASH_ENV
      - run: sudo npm install -g apollo
      - run: cd client/ && apollo client:check --clientName=iOS --clientVersion=$SHORT_REV --includes="*.py" --variant=$APOLLO_GRAPH_VARIANT

  # This is a Apollo Server based service
  check_books_schema:
    resource_class: small
    docker:
      - image: cimg/node:15.5
    steps:
      - checkout
      - run: curl -sSL https://rover.apollo.dev/nix/latest | sh
      - run: cd books && npm install

      # This command authenticates using the `APOLLO_KEY` environment
      # variable. Specify your GraphQL endpoint's URL in your Apollo config.
      - run: ~.rover/bin/rover subgraph check jesse-test-1xc6kq --schema=./books/schema.graphql name=books 

  # This is a GoLang based service
  check_authors_schema:
    resource_class: small
    docker:
      - image: cimg/go:1.15-node
    steps:
      - checkout
      - run: curl -sSL https://rover.apollo.dev/nix/latest | sh
      # This command authenticates using the `APOLLO_KEY` environment
      # variable. Specify your GraphQL endpoint's URL in your Apollo config.
      - run: ~.rover/bin/rover subgraph check jesse-test-1xc6kq --schema=./authors/graph/schema.graphqls name=authors

  # An example of a schema-as-code service schema check
  #check_service_schema:
  #  resource_class: small
  #  docker:
  #    - image: cimg/node:15.5
  #  steps:
  #    - checkout
  #    - run: sudo npm install -g apollo
  #    - run: cd books && npm install
  #    # Start the GraphQL server. If a different command is used to
  #    # start the server, use it in place of `npm start` here.
  #    - run:
  #        name: Starting server
  #        command: cd books && node server.js
  #        background: true
  #
  #    # Make sure the server has enough time to start up before running
  #    # commands against it.
  #    - run: sleep 5
  #
  #    # This command authenticates using the `APOLLO_KEY` environment
  #    # variable. Specify your GraphQL endpoint's URL in your Apollo config.
  #    - run: apollo service:check --endpoint=http://localhost:8080 --graph=jesse-test-1xc6kq --variant=current --serviceName=books

workflows:
  version: 2
  general:
    jobs:
      - check_client:
          context: ApolloCloud
      - check_books_schema:
          context: ApolloCloud
      - check_authors_schema:
          context: ApolloCloud
  workweek:
    triggers:
      - schedule:
          cron: "0,5,10,15,20,25,30,35,40,45,50,55 11-18 * * 1-5"
          filters:
            branches:
              only: master
    jobs:
      - run_client